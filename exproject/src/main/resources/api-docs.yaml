openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8079
  description: Generated server url
paths:
  /user/add:
    get:
      tags:
      - user-rest-controller
      summary: "Add user by its first name, last name, email and age"
      operationId: addUser_1
      parameters:
      - name: f
        in: query
        required: true
        schema:
          type: string
      - name: l
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: a
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Invalid parameters or parameters is not present
        "200":
          description: Add new user was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "application/json"
    post:
      tags:
      - user-rest-controller
      summary: "Add user by its first name, last name, email and age"
      operationId: addUser
      parameters:
      - name: f
        in: query
        required: true
        schema:
          type: string
      - name: l
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: a
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Invalid parameters or parameters is not present
        "200":
          description: Add new user was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "text/plain"
  /user/delete/{id}:
    get:
      tags:
      - user-rest-controller
      summary: Delete user by its id
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: User not found
        "400":
          description: Invalid id supplied
        "200":
          description: Found the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "text/plain"
    delete:
      tags:
      - user-rest-controller
      summary: Delete user by its id
      operationId: deleteUser_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: User not found
        "400":
          description: Invalid id supplied
        "200":
          description: Found the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "text/plain"
  /user/getuser/{id}:
    get:
      tags:
      - user-rest-controller
      summary: Get a user by its id
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Invalid parameters or parameters is not present
        "200":
          description: Add new user was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "text/plain"
  /user/all:
    get:
      tags:
      - user-rest-controller
      summary: Get all user in database
      operationId: getAllUsers
      responses:
        "404":
          description: Table not found
        "200":
          description: Ok! All user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        http_headers:
          'Content-Type': "text/plain"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        age:
          type: integer
          format: int32
